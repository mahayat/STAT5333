dhyper(3,4,4,4)
dhyper(4,4,4,4)
qhyper(3:4,4,4,4)
dhyper(3:4,4,4,4)
dhyper(21:23,36,5,23)
1-sum(dhyper(21:23,36,5,23))
qhyper(21,36,5,23)
phyper(21,36,5,23)
phyper(20,36,5,23)
phyper(21,36,5,23)
phyper(19,36,5,23)
data
?fisher.test
# General Code
n_table= matrix(c(105,8,12,2,18,19,47,52,0,13), nrow=5, byrow=TRUE)
n_rows = dim(n_table)[1]
n_cols = dim(n_table)[2]
mu_table = matrix(rep(0,n_rows*n_cols), nrow=n_rows, byrow=TRUE)
for (i in 1:n_rows){
for (j in 1:n_cols){
mu_table[i,j]=(sum(n_table[i,])*sum(n_table[,j]))/sum(n_table)
}
}
(mu_table)
chi2_stat = sum((n_table-mu_table)^2/mu_table)
(chi2_stat)
df = (n_rows-1)*(n_cols-1)
p_value = 1-pchisq(chi2_stat,df)
(p_value)
(phyper(20,36,5,23))
data = matrix(c(21,2,15,3),2,2,byrow=TRUE)
fisher.test(data,'greater')
# General Code
n_table= matrix(c(105,8,12,2,18,19,47,52,0,13), nrow=5, byrow=TRUE)
n_rows = dim(n_table)[1]
n_cols = dim(n_table)[2]
mu_table = matrix(rep(0,n_rows*n_cols), nrow=n_rows, byrow=TRUE)
for (i in 1:n_rows){
for (j in 1:n_cols){
mu_table[i,j]=(sum(n_table[i,])*sum(n_table[,j]))/sum(n_table)
}
}
(mu_table)
chi2_stat = sum((n_table-mu_table)^2/mu_table)
(chi2_stat)
df = (n_rows-1)*(n_cols-1)
p_value = 1-pchisq(chi2_stat,df)
(p_value)
(phyper(20,36,5,23))
data = matrix(c(21,2,15,3),2,2,byrow=TRUE)
fisher.test(data,'greater')
(phyper(20,41,23,23))
(phyper(20,41,23,36))
# General Code
n_table= matrix(c(105,8,12,2,18,19,47,52,0,13), nrow=5, byrow=TRUE)
n_rows = dim(n_table)[1]
n_cols = dim(n_table)[2]
mu_table = matrix(rep(0,n_rows*n_cols), nrow=n_rows, byrow=TRUE)
for (i in 1:n_rows){
for (j in 1:n_cols){
mu_table[i,j]=(sum(n_table[i,])*sum(n_table[,j]))/sum(n_table)
}
}
(mu_table)
chi2_stat = sum((n_table-mu_table)^2/mu_table)
(chi2_stat)
df = (n_rows-1)*(n_cols-1)
p_value = 1-pchisq(chi2_stat,df)
(p_value)
(phyper(20,36,5,23))
(phyper(20,41,23,36))
data = matrix(c(21,2,15,3),2,2,byrow=TRUE)
fisher.test(data,'greater')
# General Code
n_table= matrix(c(105,8,12,2,18,19,47,52,0,13), nrow=5, byrow=TRUE)
n_rows = dim(n_table)[1]
n_cols = dim(n_table)[2]
mu_table = matrix(rep(0,n_rows*n_cols), nrow=n_rows, byrow=TRUE)
for (i in 1:n_rows){
for (j in 1:n_cols){
mu_table[i,j]=(sum(n_table[i,])*sum(n_table[,j]))/sum(n_table)
}
}
(mu_table)
chi2_stat = sum((n_table-mu_table)^2/mu_table)
(chi2_stat)
df = (n_rows-1)*(n_cols-1)
p_value = 1-pchisq(chi2_stat,df)
(p_value)
(phyper(20,36,5,23))
(phyper(20,41,23,36))
data = matrix(c(21,2,15,3),2,2,byrow=TRUE)
fisher.test(data,'greater')
phyper3,4,4,4)
phyper(3,4,4,4)
phyper(d,4,4,4)
dhyper(3,4,4,4)
dhyper(4,4,4,4)
1-phyper(2,4,4,4)
# General Code
n_table= matrix(c(105,8,12,2,18,19,47,52,0,13), nrow=5, byrow=TRUE)
n_rows = dim(n_table)[1]
n_cols = dim(n_table)[2]
mu_table = matrix(rep(0,n_rows*n_cols), nrow=n_rows, byrow=TRUE)
for (i in 1:n_rows){
for (j in 1:n_cols){
mu_table[i,j]=(sum(n_table[i,])*sum(n_table[,j]))/sum(n_table)
}
}
(mu_table)
chi2_stat = sum((n_table-mu_table)^2/mu_table)
(chi2_stat)
df = (n_rows-1)*(n_cols-1)
p_value = 1-pchisq(chi2_stat,df)
(p_value)
(phyper(20,36,5,23))
(phyper(20,41,23,36))
data = matrix(c(21,2,15,3),2,2,byrow=TRUE)
fisher.test(data,'greater')
# General Code
n_table= matrix(c(105,8,12,2,18,19,47,52,0,13), nrow=5, byrow=TRUE)
n_rows = dim(n_table)[1]
n_cols = dim(n_table)[2]
mu_table = matrix(rep(0,n_rows*n_cols), nrow=n_rows, byrow=TRUE)
for (i in 1:n_rows){
for (j in 1:n_cols){
mu_table[i,j]=(sum(n_table[i,])*sum(n_table[,j]))/sum(n_table)
}
}
(mu_table)
chi2_stat = sum((n_table-mu_table)^2/mu_table)
(chi2_stat)
df = (n_rows-1)*(n_cols-1)
p_value = 1-pchisq(chi2_stat,df)
(p_value)
(phyper(20,36,5,23))
(phyper(20,41,23,36))
data = matrix(c(21,2,15,3),2,2,byrow=TRUE)
fisher.test(data,'greater')
1-p(19,23,18,23)
1-phyper(19,23,18,23)
1-phyper(20,23,18,23)
(phyper(20,36,5,23))
dhyper(3,4,4,4)
dhyper(4,4,4,4)
1-phyper(2,4,4,4)
1-phyper(20,23,18,23)
1-phyper(20,23,18,36)
phyper(20,23,18,36)
1-phyper(20,23,18,36)
1-phyper(20,36,5,23)
1-0.6384
?fisher.test
(chisq.test(n_table))
chi2_stat = sum((n_table-mu_table)^2/mu_table)
(chi2_stat)
# General Code
n_table= matrix(c(105,8,12,2,18,19,47,52,0,13), nrow=5, byrow=TRUE)
n_rows = dim(n_table)[1]
n_cols = dim(n_table)[2]
mu_table = matrix(rep(0,n_rows*n_cols), nrow=n_rows, byrow=TRUE)
for (i in 1:n_rows){
for (j in 1:n_cols){
mu_table[i,j]=(sum(n_table[i,])*sum(n_table[,j]))/sum(n_table)
}
}
(mu_table)
chisq.test(n_table)$expected
chi2_stat = sum((n_table-mu_table)^2/mu_table)
(chi2_stat)
df = (n_rows-1)*(n_cols-1)
p_value = 1-pchisq(chi2_stat,df)
(p_value)
(phyper(20,36,5,23))
(phyper(20,41,23,36))
data = matrix(c(21,2,15,3),2,2,byrow=TRUE)
fisher.test(data,'greater')
# General Code
n_table= matrix(c(105,8,12,2,18,19,47,52,0,13), nrow=5, byrow=TRUE)
n_rows = dim(n_table)[1]
n_cols = dim(n_table)[2]
mu_table = matrix(rep(0,n_rows*n_cols), nrow=n_rows, byrow=TRUE)
for (i in 1:n_rows){
for (j in 1:n_cols){
mu_table[i,j]=(sum(n_table[i,])*sum(n_table[,j]))/sum(n_table)
}
}
(mu_table)
chi2_stat = sum((n_table-mu_table)^2/mu_table)
(chi2_stat)
df = (n_rows-1)*(n_cols-1)
p_value = 1-pchisq(chi2_stat,df)
(p_value)
chisq.test(n_table)
(phyper(20,36,5,23))
(phyper(20,41,23,36))
data = matrix(c(21,2,15,3),2,2,byrow=TRUE)
fisher.test(data,'greater')
# General Code
n_table= matrix(c(105,8,12,2,18,19,47,52,0,13), nrow=5, byrow=TRUE)
n_rows = dim(n_table)[1]
n_cols = dim(n_table)[2]
mu_table = matrix(rep(0,n_rows*n_cols), nrow=n_rows, byrow=TRUE)
for (i in 1:n_rows){
for (j in 1:n_cols){
mu_table[i,j]=(sum(n_table[i,])*sum(n_table[,j]))/sum(n_table)
}
}
(mu_table)
chi2_stat = sum((n_table-mu_table)^2/mu_table)
(chi2_stat)
df = (n_rows-1)*(n_cols-1)
p_value = 1-pchisq(chi2_stat,df)
(p_value)
builtin_func = chisq.test(n_table)
builtin_func$expected
(phyper(20,36,5,23))
(phyper(20,41,23,36))
data = matrix(c(21,2,15,3),2,2,byrow=TRUE)
fisher.test(data,'greater')
# General Code
n_table= matrix(c(105,8,12,2,18,19,47,52,0,13), nrow=5, byrow=TRUE)
n_rows = dim(n_table)[1]
n_cols = dim(n_table)[2]
mu_table = matrix(rep(0,n_rows*n_cols), nrow=n_rows, byrow=TRUE)
for (i in 1:n_rows){
for (j in 1:n_cols){
mu_table[i,j]=(sum(n_table[i,])*sum(n_table[,j]))/sum(n_table)
}
}
(mu_table)
chi2_stat = sum((n_table-mu_table)^2/mu_table)
(chi2_stat)
df = (n_rows-1)*(n_cols-1)
p_value = 1-pchisq(chi2_stat,df)
(p_value)
(builtin_func = chisq.test(n_table))
builtin_func$expected
(phyper(20,36,5,23))
(phyper(20,41,23,36))
data = matrix(c(21,2,15,3),2,2,byrow=TRUE)
fisher.test(data,'greater')
# General Code
n_table= matrix(c(105,8,12,2,18,19,47,52,0,13), nrow=5, byrow=TRUE)
n_rows = dim(n_table)[1]
n_cols = dim(n_table)[2]
mu_table = matrix(rep(0,n_rows*n_cols), nrow=n_rows, byrow=TRUE)
for (i in 1:n_rows){
for (j in 1:n_cols){
mu_table[i,j]=(sum(n_table[i,])*sum(n_table[,j]))/sum(n_table)
}
}
(mu_table)
chi2_stat = sum((n_table-mu_table)^2/mu_table)
(chi2_stat)
df = (n_rows-1)*(n_cols-1)
p_value = 1-pchisq(chi2_stat,df)
(p_value)
(builtin_func = chisq.test(n_table))
builtin_func$expected
(1-phyper(20,36,5,23))
data = matrix(c(21,2,15,3),2,2,byrow=TRUE)
fisher.test(data,'greater')
1-.3808337
# General Code
n_table= matrix(c(105,8,12,2,18,19,47,52,0,13), nrow=5, byrow=TRUE)
n_rows = dim(n_table)[1]
n_cols = dim(n_table)[2]
mu_table = matrix(rep(0,n_rows*n_cols), nrow=n_rows, byrow=TRUE)
for (i in 1:n_rows){
for (j in 1:n_cols){
mu_table[i,j]=(sum(n_table[i,])*sum(n_table[,j]))/sum(n_table)
}
}
(mu_table)
chi2_stat = sum((n_table-mu_table)^2/mu_table)
(chi2_stat)
df = (n_rows-1)*(n_cols-1)
p_value = 1-pchisq(chi2_stat,df)
(p_value)
(builtin_func = chisq.test(n_table))
builtin_func$expected
(1-phyper(20,36,5,23))
(1-phyper(20,23,18,36))
data = matrix(c(21,2,15,3),2,2,byrow=TRUE)
fisher.test(data,'greater')
dhyper(21,23,18,36)+dhyper(22,23,18,36)+dhyper(23,23,18,36)
1-(dhyper(21,23,18,36)+dhyper(22,23,18,36)+dhyper(23,23,18,36))
chisq.test(data)
chisq.test(data)$expected
fisher.test(data,'less')
# General Code
n_table= matrix(c(105,8,12,2,18,19,47,52,0,13), nrow=5, byrow=TRUE)
n_rows = dim(n_table)[1]
n_cols = dim(n_table)[2]
mu_table = matrix(rep(0,n_rows*n_cols), nrow=n_rows, byrow=TRUE)
for (i in 1:n_rows){
for (j in 1:n_cols){
mu_table[i,j]=(sum(n_table[i,])*sum(n_table[,j]))/sum(n_table)
}
}
(mu_table)
chi2_stat = sum((n_table-mu_table)^2/mu_table)
(chi2_stat)
df = (n_rows-1)*(n_cols-1)
p_value = 1-pchisq(chi2_stat,df)
(p_value)
(builtin_func = chisq.test(n_table))
builtin_func$expected
(1-phyper(20,23,18,36))
data = matrix(c(21,2,15,3),2,2,byrow=TRUE)
fisher.test(data,alternative = "greater")
# General Code
n_table= matrix(c(105,8,12,2,18,19,47,52,0,13), nrow=5, byrow=TRUE)
n_rows = dim(n_table)[1]
n_cols = dim(n_table)[2]
mu_table = matrix(rep(0,n_rows*n_cols), nrow=n_rows, byrow=TRUE)
for (i in 1:n_rows){
for (j in 1:n_cols){
mu_table[i,j]=(sum(n_table[i,])*sum(n_table[,j]))/sum(n_table)
}
}
(mu_table)
chi2_stat = sum((n_table-mu_table)^2/mu_table)
(chi2_stat)
df = (n_rows-1)*(n_cols-1)
p_value = 1-pchisq(chi2_stat,df)
(p_value)
(builtin_func = chisq.test(n_table))
builtin_func$expected
(1-phyper(20,23,18,36))
data = matrix(c(21,2,15,3),2,2,byrow=TRUE)
fisher.test(data,alternative = "greater")
# General Code
n_table= matrix(c(105,8,12,2,18,19,47,52,0,13), nrow=5, byrow=TRUE)
n_rows = dim(n_table)[1]
n_cols = dim(n_table)[2]
mu_table = matrix(rep(0,n_rows*n_cols), nrow=n_rows, byrow=TRUE)
for (i in 1:n_rows){
for (j in 1:n_cols){
mu_table[i,j]=(sum(n_table[i,])*sum(n_table[,j]))/sum(n_table)
}
}
(mu_table)
chi2_stat = sum((n_table-mu_table)^2/mu_table)
(chi2_stat)
df = (n_rows-1)*(n_cols-1)
p_value = 1-pchisq(chi2_stat,df)
(p_value)
(builtin_func = chisq.test(n_table))
builtin_func$expected
(1-phyper(20,23,18,36))
data = matrix(c(21,2,15,3),2,2,byrow=TRUE)
fisher.test(data,alternative = "greater")
# General Code
n_table= matrix(c(105,8,12,2,18,19,47,52,0,13), nrow=5, byrow=TRUE)
n_rows = dim(n_table)[1]
n_cols = dim(n_table)[2]
mu_table = matrix(rep(0,n_rows*n_cols), nrow=n_rows, byrow=TRUE)
for (i in 1:n_rows){
for (j in 1:n_cols){
mu_table[i,j]=(sum(n_table[i,])*sum(n_table[,j]))/sum(n_table)
}
}
(mu_table)
chi2_stat = sum((n_table-mu_table)^2/mu_table)
(chi2_stat)
df = (n_rows-1)*(n_cols-1)
p_value = 1-pchisq(chi2_stat,df)
(p_value)
(builtin_func = chisq.test(n_table))
builtin_func$expected
(1-phyper(20,23,18,36))
data = matrix(c(21,2,15,3),2,2,byrow=TRUE)
fisher.test(data,alternative = "greater")
# General Code
n_table= matrix(c(105,8,12,2,18,19,47,52,0,13), nrow=5, byrow=TRUE)
n_rows = dim(n_table)[1]
n_cols = dim(n_table)[2]
mu_table = matrix(rep(0,n_rows*n_cols), nrow=n_rows, byrow=TRUE)
for (i in 1:n_rows){
for (j in 1:n_cols){
mu_table[i,j]=(sum(n_table[i,])*sum(n_table[,j]))/sum(n_table)
}
}
(mu_table)
chi2_stat = sum((n_table-mu_table)^2/mu_table)
(chi2_stat)
df = (n_rows-1)*(n_cols-1)
p_value = 1-pchisq(chi2_stat,df)
(p_value)
(builtin_func = chisq.test(n_table))
builtin_func$expected
(p_value = 1-phyper(20,23,18,36))
data = matrix(c(21,2,15,3),2,2,byrow=TRUE)
fisher.test(data,alternative = "greater")
# General Code
n_table= matrix(c(105,8,12,2,18,19,47,52,0,13), nrow=5, byrow=TRUE)
n_rows = dim(n_table)[1]
n_cols = dim(n_table)[2]
mu_table = matrix(rep(0,n_rows*n_cols), nrow=n_rows, byrow=TRUE)
for (i in 1:n_rows){
for (j in 1:n_cols){
mu_table[i,j]=(sum(n_table[i,])*sum(n_table[,j]))/sum(n_table)
}
}
(mu_table)
chi2_stat = sum((n_table-mu_table)^2/mu_table)
(chi2_stat)
df = (n_rows-1)*(n_cols-1)
p_value = 1-pchisq(chi2_stat,df)
(p_value)
(builtin_func = chisq.test(n_table))
builtin_func$expected
(p_value = 1-phyper(20,23,18,36))
data = matrix(c(21,2,15,3),2,2,byrow=TRUE)
fisher.test(data,alternative = "greater")
kk = fisher.test(data,alternative = "greater")
kk$p.value
kk$null.value
kk$method
kk
kk$alternative
# General Code
n_table= matrix(c(105,8,12,2,18,19,47,52,0,13), nrow=5, byrow=TRUE)
n_rows = dim(n_table)[1]
n_cols = dim(n_table)[2]
mu_table = matrix(rep(0,n_rows*n_cols), nrow=n_rows, byrow=TRUE)
for (i in 1:n_rows){
for (j in 1:n_cols){
mu_table[i,j]=(sum(n_table[i,])*sum(n_table[,j]))/sum(n_table)
}
}
(mu_table)
chi2_stat = sum((n_table-mu_table)^2/mu_table)
(chi2_stat)
df = (n_rows-1)*(n_cols-1)
p_value = 1-pchisq(chi2_stat,df)
(p_value)
(builtin_func = chisq.test(n_table))
builtin_func$expected
(p_value = 1-phyper(20,23,18,36))
data = matrix(c(21,2,15,3),2,2,byrow=TRUE)
fisher.test(data,alternative = "greater")
kk$data.name
kk$conf.int
kk$estimate
kk$null.value
kk$alternative
kk$method
# General Code
n_table= matrix(c(105,8,12,2,18,19,47,52,0,13), nrow=5, byrow=TRUE)
n_rows = dim(n_table)[1]
n_cols = dim(n_table)[2]
mu_table = matrix(rep(0,n_rows*n_cols), nrow=n_rows, byrow=TRUE)
for (i in 1:n_rows){
for (j in 1:n_cols){
mu_table[i,j]=(sum(n_table[i,])*sum(n_table[,j]))/sum(n_table)
}
}
(mu_table)
chi2_stat = sum((n_table-mu_table)^2/mu_table)
(chi2_stat)
df = (n_rows-1)*(n_cols-1)
p_value = 1-pchisq(chi2_stat,df)
(p_value)
(builtin_func = chisq.test(n_table))
builtin_func$expected
(p_value = 1-phyper(20,23,18,36))
data = matrix(c(21,2,15,3),2,2,byrow=TRUE)
fisher.test(data,alternative = "greater")
(21*3)/(15*2)
# General Code
n_table= matrix(c(105,8,12,2,18,19,47,52,0,13), nrow=5, byrow=TRUE)
n_rows = dim(n_table)[1]
n_cols = dim(n_table)[2]
mu_table = matrix(rep(0,n_rows*n_cols), nrow=n_rows, byrow=TRUE)
for (i in 1:n_rows){
for (j in 1:n_cols){
mu_table[i,j]=(sum(n_table[i,])*sum(n_table[,j]))/sum(n_table)
}
}
(mu_table)
chi2_stat = sum((n_table-mu_table)^2/mu_table)
(chi2_stat)
df = (n_rows-1)*(n_cols-1)
p_value = 1-pchisq(chi2_stat,df)
(p_value)
(builtin_func = chisq.test(n_table))
builtin_func$expected
(p_value = 1-phyper(20,23,18,36))
data = matrix(c(21,2,15,3),2,2,byrow=TRUE)
fisher.test(data,alternative = "greater")
dbinom(3,100,0.005)
dpois(3,100*0.005)
dbinom(3,200,0.005)
dpois(3,200*0.005)
200*0.005
50*0.005
dbinom(3,300,0.005)
dpois(3,300*0.005)
pnorm(3.409,0.47,0.1378)
1-pnorm(3.409,0.47,0.1378)
?pbinom
pbinom(3,5,0.5)
1-pbinom(3,5,0.5)
1-pbinom(3,5,0.5)+pbinom(1,5,0.5)
1-pbinom(2,4,0.5)
exit
q
setwd("C:/Users/abulh/Desktop/STAT5333/HW5")
exp(1.4165)
